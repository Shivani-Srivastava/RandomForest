"0","# Needs to import ROCR package for ROC curve plotting:"
"0","library(ROCR)"
"0",""
"0","plot_roc <- function(rf, test_y, test_X){  # test_y = test$y"
"0",""
"0","  prediction_for_roc_curve <- predict(rf, test_X, type=""prob"")"
"0",""
"0","  pretty_colours <- c(""#F8766D"",""#00BA38"",""#619CFF"", ""orange"", ""purple"", ""azure3"")"
"0",""
"0","  classes <- levels(test_y)"
"0",""
"0","  for (i in 1:length(classes)){"
"0",""
"0","   true_values <- ifelse(test_y == classes[i], 1, 0) # Define class[i] membership"
"0",""
"0","   pred <- prediction(prediction_for_roc_curve[,i], true_values) # Assess classifier perf for class[i]"
"0",""
"0","   perf <- performance(pred, ""tpr"", ""fpr"")"
"0","   if (i==1)"
"0","   {"
"0","       plot(perf, main=""ROC Curve"", col=pretty_colours[i]) "
"0","   }"
"0","   else"
"0","   {"
"0","       plot(perf, main=""ROC Curve"", col=pretty_colours[i], add=TRUE) "
"0","   }"
"0",""
"0","   # abline(a=0, b=1, col=""black"")"
"0","   auc.perf <- performance(pred, measure = ""auc"") # Calc AUC and print on screen"
"0","   print(auc.perf@y.values)"
"0","	} # i loop ends"
"0",""
"0","} # func ends"
"0",""
"0","# test-drive"
"0","# plot_roc(rf, test$y, test[,-1])"
